[{"D:\\youtube react practice\\movies\\src\\index.js":"1","D:\\youtube react practice\\movies\\src\\reportWebVitals.js":"2","D:\\youtube react practice\\movies\\src\\App.jsx":"3","D:\\youtube react practice\\movies\\src\\components\\home\\Home.jsx":"4","D:\\youtube react practice\\movies\\src\\components\\moviedetail\\MovieDetail.jsx":"5","D:\\youtube react practice\\movies\\src\\service\\index.js":"6","D:\\youtube react practice\\MOVIES\\src\\index.js":"7","D:\\youtube react practice\\MOVIES\\src\\reportWebVitals.js":"8","D:\\youtube react practice\\MOVIES\\src\\App.jsx":"9","D:\\youtube react practice\\MOVIES\\src\\components\\moviedetail\\MovieDetail.jsx":"10","D:\\youtube react practice\\MOVIES\\src\\components\\home\\Home.jsx":"11","D:\\youtube react practice\\MOVIES\\src\\service\\index.js":"12"},{"size":586,"mtime":1619774971480,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":448,"mtime":1619775132221,"results":"16","hashOfConfig":"14"},{"size":6895,"mtime":1619948868478,"results":"17","hashOfConfig":"14"},{"size":99,"mtime":1619772552394,"results":"18","hashOfConfig":"14"},{"size":3850,"mtime":1619945195601,"results":"19","hashOfConfig":"14"},{"size":586,"mtime":1619774971480,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":448,"mtime":1619775132221,"results":"23","hashOfConfig":"21"},{"size":99,"mtime":1619772552394,"results":"24","hashOfConfig":"21"},{"size":1835,"mtime":1619892281346,"results":"25","hashOfConfig":"21"},{"size":1491,"mtime":1619771735277,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"bwe0j4",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pkskdu",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},"D:\\youtube react practice\\movies\\src\\index.js",[],["55","56"],"D:\\youtube react practice\\movies\\src\\reportWebVitals.js",[],"D:\\youtube react practice\\movies\\src\\App.jsx",[],"D:\\youtube react practice\\movies\\src\\components\\home\\Home.jsx",[],"D:\\youtube react practice\\movies\\src\\components\\moviedetail\\MovieDetail.jsx",[],"D:\\youtube react practice\\movies\\src\\service\\index.js",["57"],"import axios from 'axios';\r\n\r\n\r\nconst apiKey = '30bef9d2c61ba7bac6c77a81ca74951e';\r\nconst url = 'https://api.themoviedb.org/3';\r\nconst nowPlayingUrl = `${url}/movie/now_playing`;\r\nconst topRatedUrl = `${url}/movie/top_rated`;\r\nconst movieUrl = `${url}/movie`;\r\nconst genreUrl = `${url}/genre/movie/list`;\r\nconst moviesUrl = `${url}/discover/movie`;\r\nconst personUrl = `${url}/trending/person/week`;\r\n\r\n\r\nexport const fetchMovies = async () => {\r\n    try {\r\n        const { data } = await axios.get(nowPlayingUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en-US',\r\n                page: 1\r\n            }\r\n        })\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/'\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average']\r\n        }));\r\n        return modifiedData\r\n    } catch (error) { }\r\n}\r\nexport const fetchGenre = async () => {\r\n    try {\r\n        const { data } = await axios.get(genreUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en-US',\r\n                page: 1\r\n            }\r\n        })\r\n        const modifiedData = data['genres'].map((g) => ({\r\n            id: g['id'],\r\n            name: g['name']\r\n        }));\r\n        return modifiedData\r\n    } catch (error) { }\r\n}\r\nexport const fetchMovieByGenre = async (genre_id) => {\r\n    try {\r\n        const { data } = await axios.get(moviesUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en-US',\r\n                page: 1,\r\n                with_genres: genre_id\r\n            }\r\n        });\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/'\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average']\r\n        }));\r\n        return modifiedData;\r\n    }\r\n    catch (error) { }\r\n}\r\nexport const fetchPersons = async () => {\r\n    try {\r\n        const { data } = await axios.get(personUrl, {\r\n            params: {\r\n                api_key: apiKey\r\n            }\r\n        })\r\n        const modifiedData = data['results'].map((p) => ({\r\n            id: p['id'],\r\n            popularity: p['popularith'],\r\n            name: p['name'],\r\n            profileImg: 'https://image.tmdb.org/t/p/original/' + p['profile_path'],\r\n            known: p['known_for_department']\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) { }\r\n}\r\nexport const fetchTopratedMovie = async() => {\r\n    try {\r\n        const { data } = await axios.get(topRatedUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en-US',\r\n                page: 1\r\n            }\r\n        });\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/'\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average']\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) { }\r\n}\r\nexport const fetchMovieDetail = () => {\r\n\r\n}\r\nexport const fetchMovieVideos = () => {\r\n\r\n}\r\nexport const fetchCasts = () => {\r\n\r\n}\r\nexport const fetchSimilarMovie = () => {\r\n\r\n}","D:\\youtube react practice\\MOVIES\\src\\index.js",[],"D:\\youtube react practice\\MOVIES\\src\\reportWebVitals.js",[],"D:\\youtube react practice\\MOVIES\\src\\App.jsx",[],"D:\\youtube react practice\\MOVIES\\src\\components\\moviedetail\\MovieDetail.jsx",[],"D:\\youtube react practice\\MOVIES\\src\\components\\home\\Home.jsx",[],"D:\\youtube react practice\\MOVIES\\src\\service\\index.js",["58","59","60","61","62"],"import axios from 'axios';\r\n\r\n\r\nconst apiKey = '30bef9d2c61ba7bac6c77a81ca74951e';\r\nconst url = 'https://api.themoviedb.org/3';\r\nconst nowPlayingUrl = `${url}/movie/now_playing`;\r\nconst topRatedUrl = `${url}/movie/top_rated`;\r\nconst movieUrl = `${url}/movie`;\r\nconst genreUrl =`${url}/genre/movie/list`;\r\nconst moviesUrl = `${url}/dicover/movie`;\r\nconst personUrl = `${url}/trending/person/week`;\r\n\r\n\r\nexport const fetchMovies = async ()=> { \r\n    try{\r\n        const {data} = await axios.get(nowPlayingUrl, {\r\n            params : {\r\n                api_key: apiKey,\r\n                language: 'en-US',\r\n                page: 1\r\n            }\r\n        }) \r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/'\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl +  m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average']\r\n        }));\r\n        return modifiedData\r\n    }catch(error){}\r\n}\r\nexport const fetchGenre = ()=> { \r\n\r\n}\r\nexport const fetchMovieByGenre = ()=> { \r\n\r\n}\r\nexport const fetchPersons = ()=> { \r\n\r\n}\r\nexport const fetchTopratedMovie = ()=> { \r\n\r\n}\r\nexport const fetchMovieDetail = ()=> { \r\n\r\n}\r\nexport const fetchMovieVideos = ()=> { \r\n\r\n}\r\nexport const fetchCasts = ()=> { \r\n\r\n}\r\nexport const fetchSimilarMovie = ()=> { \r\n\r\n}",["63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":8,"column":7,"nodeType":"71","messageId":"72","endLine":8,"endColumn":15},{"ruleId":"69","severity":1,"message":"73","line":7,"column":7,"nodeType":"71","messageId":"72","endLine":7,"endColumn":18},{"ruleId":"69","severity":1,"message":"70","line":8,"column":7,"nodeType":"71","messageId":"72","endLine":8,"endColumn":15},{"ruleId":"69","severity":1,"message":"74","line":9,"column":7,"nodeType":"71","messageId":"72","endLine":9,"endColumn":15},{"ruleId":"69","severity":1,"message":"75","line":10,"column":7,"nodeType":"71","messageId":"72","endLine":10,"endColumn":16},{"ruleId":"69","severity":1,"message":"76","line":11,"column":7,"nodeType":"71","messageId":"72","endLine":11,"endColumn":16},{"ruleId":"65","replacedBy":"77"},{"ruleId":"67","replacedBy":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'movieUrl' is assigned a value but never used.","Identifier","unusedVar","'topRatedUrl' is assigned a value but never used.","'genreUrl' is assigned a value but never used.","'moviesUrl' is assigned a value but never used.","'personUrl' is assigned a value but never used.",["79"],["80"],"no-global-assign","no-unsafe-negation"]